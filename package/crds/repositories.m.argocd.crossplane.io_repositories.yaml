---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: repositories.repositories.m.argocd.crossplane.io
spec:
  group: repositories.m.argocd.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - argocd
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Repository is a managed resource that represents an ArgoCD
          Git Repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A RepositorySpec defines the desired state of an ArgoCD Repository.
            properties:
              forProvider:
                description: RepositoryParameters define the desired state of an ArgoCD
                  Git Repository
                properties:
                  enableLfs:
                    description: Whether git-lfs support should be enabled for this
                      repo
                    type: boolean
                  enableOCI:
                    description: Whether helm-oci support should be enabled for this
                      repo
                    type: boolean
                  githubAppEnterpriseBaseUrl:
                    description: Github App Enterprise base url if empty will default
                      to https://api.github.com
                    type: string
                  githubAppID:
                    description: Github App ID of the app used to access the repo
                    format: int64
                    type: integer
                  githubAppInstallationID:
                    description: Github App Installation ID of the installed GitHub
                      App
                    format: int64
                    type: integer
                  githubAppPrivateKeyRef:
                    description: Github App Private Key PEM data
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  inheritedCreds:
                    description: Whether credentials were inherited from a credential
                      set
                    type: boolean
                  insecure:
                    description: Whether the repo is insecure
                    type: boolean
                  name:
                    description: only for Helm repos
                    type: string
                  passwordRef:
                    description: Password for authenticating at the repo server
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  project:
                    description: |-
                      Project is a reference to the project with scoped repositories
                      only for git repos
                    type: string
                  repo:
                    description: URL of the repo
                    type: string
                  sshPrivateKeyRef:
                    description: |-
                      SSH private key data for authenticating at the repo server
                      only for Git repos
                      SSHPrivateKey *string `json:"sshPrivateKey,omitempty"`
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  tlsClientCertDataRef:
                    description: TLS client cert data for authenticating at the repo
                      server
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  tlsClientCertKeyRef:
                    description: TLS client cert key for authenticating at the repo
                      server
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  type:
                    description: type of the repo, maybe "git or "helm, "git" is assumed
                      if empty or absent
                    type: string
                  username:
                    description: Username for authenticating at the repo server
                    type: string
                required:
                - repo
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RepositoryStatus represents the observed state of an ArgoCD
              Repository.
            properties:
              atProvider:
                description: RepositoryObservation represents an argocd repository.
                properties:
                  connectionState:
                    description: Current state of repository server connecting
                    properties:
                      attemptedAt:
                        format: date-time
                        type: string
                      message:
                        type: string
                      status:
                        type: string
                    type: object
                  githubAppPrivateKey:
                    description: GithubAppPrivateKey tracks changes to a GithubAppPrivateKey
                      secret
                    properties:
                      secret:
                        description: SecretObservation observes a secret
                        properties:
                          resourceVersion:
                            description: ResourceVersion tracks the meta1.ResourceVersion
                              of an Object
                            type: string
                        type: object
                    type: object
                  password:
                    description: Password tracks changes to a Password secret
                    properties:
                      secret:
                        description: SecretObservation observes a secret
                        properties:
                          resourceVersion:
                            description: ResourceVersion tracks the meta1.ResourceVersion
                              of an Object
                            type: string
                        type: object
                    type: object
                  sshPrivateKey:
                    description: SSHPrivateKey tracks changes to a SSHPrivateKey secret
                    properties:
                      secret:
                        description: SecretObservation observes a secret
                        properties:
                          resourceVersion:
                            description: ResourceVersion tracks the meta1.ResourceVersion
                              of an Object
                            type: string
                        type: object
                    type: object
                  tlsClientCertData:
                    description: TLSClientCertData tracks changes to a TLSClientCertData
                      secret
                    properties:
                      secret:
                        description: SecretObservation observes a secret
                        properties:
                          resourceVersion:
                            description: ResourceVersion tracks the meta1.ResourceVersion
                              of an Object
                            type: string
                        type: object
                    type: object
                  tlsClientCertKey:
                    description: TLSClientCertKey tracks changes to a TLSClientCertKey
                      secret
                    properties:
                      secret:
                        description: SecretObservation observes a secret
                        properties:
                          resourceVersion:
                            description: ResourceVersion tracks the meta1.ResourceVersion
                              of an Object
                            type: string
                        type: object
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
