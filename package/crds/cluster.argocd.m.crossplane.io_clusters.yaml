---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusters.cluster.argocd.m.crossplane.io
spec:
  group: cluster.argocd.m.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - argocd
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Cluster is a managed resource that represents an ArgoCD Git
          Cluster
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ClusterSpec defines the desired state of an ArgoCD Cluster.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ClusterParameters define the desired state of an ArgoCD
                  Cluster
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations for cluster secret metadata
                    type: object
                  config:
                    description: Config holds cluster information for connecting to
                      a cluster
                    properties:
                      awsAuthConfig:
                        description: AWSAuthConfig contains IAM authentication configuration
                        properties:
                          clusterName:
                            description: ClusterName contains AWS cluster name
                            type: string
                          roleARN:
                            description: RoleARN contains optional role ARN. If set
                              then AWS IAM Authenticator assume a role to perform
                              cluster operations instead of the default AWS credential
                              provider chain.
                            type: string
                        type: object
                      bearerTokenSecretRef:
                        description: BearerTokenSecretRef contains a reference to
                          a kubernetes secret containing the BearerToken
                        properties:
                          key:
                            description: Key whose value will be used.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      execProviderConfig:
                        description: ExecProviderConfig contains configuration for
                          an exec provider
                        properties:
                          apiVersion:
                            description: Preferred input version of the ExecInfo
                            type: string
                          args:
                            description: Arguments to pass to the command when executing
                              it
                            items:
                              type: string
                            type: array
                          command:
                            description: Command to execute
                            type: string
                          env:
                            additionalProperties:
                              type: string
                            description: Env defines additional environment variables
                              to expose to the process
                            type: object
                          installHint:
                            description: This text is shown to the user when the executable
                              doesn't seem to be present
                            type: string
                        type: object
                      kubeconfigSecretRef:
                        description: |-
                          KubeconfigSecretRef contains a reference to a Kubernetes secret entry that
                          contains a raw kubeconfig in YAML or JSON.
                          See https://kubernetes.io/docs/reference/config-api/kubeconfig.v1/ for more
                          info about Kubeconfigs
                        properties:
                          key:
                            description: Key whose value will be used.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      passwordSecretRef:
                        description: PasswordSecretRef contains a reference to a kubernetes
                          secret containing the Password
                        properties:
                          key:
                            description: Key whose value will be used.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      tlsClientConfig:
                        description: TLSClientConfig contains settings to enable transport
                          layer security
                        properties:
                          caData:
                            description: |-
                              CAData holds PEM-encoded bytes (typically read from a root certificates bundle).
                              CAData takes precedence over CAFile
                            format: byte
                            type: string
                          caDataSecretRef:
                            description: CADataSecretRef references a secret holding
                              PEM-encoded bytes (typically read from a root certificates
                              bundle).
                            properties:
                              key:
                                description: Key whose value will be used.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          certDataSecretRef:
                            description: CertDataSecretRef references a secret holding
                              PEM-encoded bytes (typically read from a client certificate
                              file).
                            properties:
                              key:
                                description: Key whose value will be used.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          insecure:
                            description: Insecure specifies that the server should
                              be accessed without verifying the TLS certificate. For
                              testing only.
                            type: boolean
                          keyDataSecretRef:
                            description: KeyDataSecretRef references a secret holding
                              PEM-encoded bytes (typically read from a client certificate
                              key file).
                            properties:
                              key:
                                description: Key whose value will be used.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          serverName:
                            description: |-
                              ServerName is passed to the server for SNI and is used in the client to check server
                              certificates against. If ServerName is empty, the hostname used to contact the
                              server is used.
                            type: string
                        required:
                        - insecure
                        type: object
                      username:
                        description: Server requires Basic authentication
                        type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels for cluster secret metadata
                    type: object
                  name:
                    description: Name of the cluster. If omitted, will use the server
                      address. Optional if using a kubeconfig
                    type: string
                  namespaces:
                    description: Holds list of namespaces which are accessible in
                      that cluster. Cluster level resources will be ignored if namespace
                      list is not empty.
                    items:
                      type: string
                    type: array
                  project:
                    description: Reference between project and cluster that allow
                      you automatically to be added as item inside Destinations project
                      entity
                    type: string
                  server:
                    description: Server is the API server URL of the Kubernetes cluster.
                      Optional if using a kubeconfig
                    type: string
                  shard:
                    description: Shard contains optional shard number. Calculated
                      on the fly by the application controller if not specified.
                    format: int64
                    type: integer
                required:
                - config
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ClusterStatus represents the observed state of an ArgoCD
              Cluster.
            properties:
              atProvider:
                description: ClusterObservation represents an argocd Cluster.
                properties:
                  connectionState:
                    description: ClusterInfo holds information about cluster cache
                      and state
                    properties:
                      applicationsCount:
                        description: ApplicationsCount is the number of applications
                          managed by Argo CD on the cluster
                        format: int64
                        type: integer
                      cacheInfo:
                        description: CacheInfo contains information about the cluster
                          cache
                        properties:
                          apisCount:
                            description: APIsCount holds number of observed Kubernetes
                              API count
                            format: int64
                            type: integer
                          lastCacheSyncTime:
                            description: LastCacheSyncTime holds time of most recent
                              cache synchronization
                            format: date-time
                            type: string
                          resourcesCount:
                            description: ResourcesCount holds number of observed Kubernetes
                              resources
                            format: int64
                            type: integer
                        type: object
                      connectionState:
                        description: ConnectionState contains information about the
                          connection to the cluster
                        properties:
                          attemptedAt:
                            description: ModifiedAt contains the timestamp when this
                              connection status has been determined
                            format: date-time
                            type: string
                          message:
                            description: Message contains human readable information
                              about the connection status
                            type: string
                          status:
                            description: Status contains the current status indicator
                              for the connection
                            type: string
                        required:
                        - attemptedAt
                        - message
                        - status
                        type: object
                      serverVersion:
                        description: ServerVersion contains information about the
                          Kubernetes version of the cluster
                        type: string
                    required:
                    - applicationsCount
                    type: object
                  kubeconfig:
                    description: Kubeconfig tracks changes to a Kubeconfig secret
                    properties:
                      secret:
                        description: SecretObservation observes a secret
                        properties:
                          resourceVersion:
                            description: ResourceVersion tracks the meta1.ResourceVersion
                              of an Object
                            type: string
                        type: object
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
